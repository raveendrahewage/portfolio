{"remainingRequest":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\TadpoleParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\TadpoleParticles.vue","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\nconst colors = [\"#fad390\", \"#81ecec\", \"#ffffff\", \"#badc58\", \"#f9ca24\", \"#FEA47F\"];\nexport default {\n  name: \"TadpoleParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n\n    canvasResize({\n      width,\n      height\n    }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 50);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(5, 9));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(1.5), new Proton.Span(0, 360), \"polar\"));\n      emitter.addInitialize(new Proton.Position(new Proton.RectZone(0, 0, width, height)));\n      const mouseInfo = {\n        x: width / 2,\n        y: height / 2\n      };\n      const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n      const crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\");\n      emitter.addBehaviour(new Proton.Color(this.color || \"#bbbbbb\")); //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n\n    createRenderer(canvas) {\n      const jointCount = 12;\n      const delayTime = 6;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = function () {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.points = [];\n        particle.data.index = 0;\n      };\n\n      renderer.onParticleUpdate = function (particle) {\n        drawTadpoleTail(particle);\n        if (particle.data.index % delayTime === 0) fillPointsData(particle);\n        drawTadpoleHead(particle);\n        particle.data.index++;\n      };\n\n      const fillPointsData = particle => {\n        particle.data.points.unshift(particle.p.y);\n        particle.data.points.unshift(particle.p.x);\n\n        if (particle.data.points.length > jointCount) {\n          particle.data.points.pop();\n          particle.data.points.pop();\n        }\n      };\n\n      const drawTadpoleHead = particle => {\n        context.fillStyle = particle.color;\n        context.beginPath();\n        context.arc(particle.p.x, particle.p.y, particle.radius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fill();\n      };\n\n      const drawTadpoleTail = particle => {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n        context.moveTo(particle.p.x, particle.p.y);\n        const l = particle.data.points.length;\n\n        for (let i = 0; i < l; i += 2) {\n          const x = particle.data.points[i];\n          const y = particle.data.points[i + 1];\n          context.lineWidth = linearEvaluation(i, l);\n          context.lineTo(x, y);\n          context.stroke();\n        }\n      };\n\n      const linearEvaluation = (i, l) => {\n        if (l <= 2) return 1;\n        const max = 6;\n        const A = (max - 1) / (2 / l - 1);\n        const B = 1 - A;\n        const X = (i + 2) / l;\n        let val = A * X + B;\n        val = val >> 0;\n        return val;\n      };\n\n      return renderer;\n    },\n\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n\n  },\n\n  beforeDestory() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n\n};",{"version":3,"sources":["TadpoleParticles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nconst colors = [\n  \"#fad390\",\n  \"#81ecec\",\n  \"#ffffff\",\n  \"#badc58\",\n  \"#f9ca24\",\n  \"#FEA47F\"\n];\nexport default {\n  name: \"TadpoleParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 50);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(5, 9));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(1.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(new Proton.RectZone(0, 0, width, height))\n      );\n\n      const mouseInfo = {\n        x: width / 2,\n        y: height / 2\n      };\n\n      const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      );\n      emitter.addBehaviour(new Proton.Color(this.color || \"#bbbbbb\"));\n      //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n      emitter.emit(\"once\");\n\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const jointCount = 12;\n      const delayTime = 6;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = function() {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.points = [];\n        particle.data.index = 0;\n      };\n\n      renderer.onParticleUpdate = function(particle) {\n        drawTadpoleTail(particle);\n        if (particle.data.index % delayTime === 0) fillPointsData(particle);\n        drawTadpoleHead(particle);\n        particle.data.index++;\n      };\n\n      const fillPointsData = particle => {\n        particle.data.points.unshift(particle.p.y);\n        particle.data.points.unshift(particle.p.x);\n\n        if (particle.data.points.length > jointCount) {\n          particle.data.points.pop();\n          particle.data.points.pop();\n        }\n      };\n\n      const drawTadpoleHead = particle => {\n        context.fillStyle = particle.color;\n        context.beginPath();\n        context.arc(\n          particle.p.x,\n          particle.p.y,\n          particle.radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n        context.closePath();\n        context.fill();\n      };\n\n      const drawTadpoleTail = particle => {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n\n        context.moveTo(particle.p.x, particle.p.y);\n\n        const l = particle.data.points.length;\n        for (let i = 0; i < l; i += 2) {\n          const x = particle.data.points[i];\n          const y = particle.data.points[i + 1];\n\n          context.lineWidth = linearEvaluation(i, l);\n          context.lineTo(x, y);\n          context.stroke();\n        }\n      };\n\n      const linearEvaluation = (i, l) => {\n        if (l <= 2) return 1;\n\n        const max = 6;\n        const A = (max - 1) / (2 / l - 1);\n        const B = 1 - A;\n        const X = (i + 2) / l;\n        let val = A * X + B;\n        val = val >> 0;\n\n        return val;\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestory() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles"}]}