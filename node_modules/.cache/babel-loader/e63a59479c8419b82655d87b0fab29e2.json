{"remainingRequest":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\BallParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\BallParticles.vue","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\nexport default {\n  name: \"BallParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      this.createMiniEmitter(canvas);\n      RAFManager.add(this.renderProton);\n    },\n\n    canvasResize({\n      width,\n      height\n    }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const context = canvas.getContext(\"2d\");\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9), new Proton.Span(0.8, 1.3));\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 50));\n      emitter.addInitialize(new Proton.Life(5, 6));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(5, 8), new Proton.Span(30, 70), \"polar\"));\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(new Proton.Color([\"#36aaf3\", \"#fd769c\", \"#94ff22\", \"#ffa545\", \"#ffffff\"]));\n      emitter.addBehaviour(new Proton.Scale(0.7, 1));\n      emitter.addBehaviour(new Proton.Gravity(3));\n      emitter.addBehaviour(new Proton.Collision(emitter));\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      const crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\");\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n      emitter.p.y = canvas.height / 2 + 50;\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = () => {\n        context.fillStyle = getColor(this.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      this.proton.addRenderer(renderer);\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n\n    customDeadBehaviour(canvas) {\n      return {\n        initialize(particle) {},\n\n        applyBehaviour: particle => {\n          if (particle.p.y + particle.radius >= canvas.height) {\n            if (particle.radius > 9) {\n              this.miniEmitteing(particle);\n              particle.dead = true;\n            }\n          }\n        }\n      };\n    },\n\n    createMiniEmitter(canvas) {\n      const miniEmitter = new Proton.Emitter();\n      miniEmitter.rate = new Proton.Rate(new Proton.Span(3, 6), new Proton.Span(1, 2));\n      miniEmitter.addInitialize(new Proton.Mass(1));\n      miniEmitter.radiusInitialize = new Proton.Radius();\n      miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n      miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n      miniEmitter.addInitialize(new Proton.V(new Proton.Span(1.5, 3), new Proton.Span(0, 70, true), \"polar\"));\n      miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n      miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n      miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n      miniEmitter.addBehaviour(new Proton.Gravity(4));\n      miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n      miniEmitter.addBehaviour(new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\"));\n      this.proton.addEmitter(miniEmitter);\n      this.miniEmitter = miniEmitter;\n    },\n\n    miniEmitteing(particle) {\n      const miniEmitter = this.miniEmitter;\n      miniEmitter.radiusInitialize.reset(particle.radius * 0.05, particle.radius * 0.2);\n      miniEmitter.colorBehaviour.reset(particle.color);\n      miniEmitter.p.x = particle.p.x;\n      miniEmitter.p.y = particle.p.y;\n      miniEmitter.emit(\"once\");\n    },\n\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n\n  },\n\n  beforeDestory() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n\n};",{"version":3,"sources":["BallParticles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"BallParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      this.createMiniEmitter(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const context = canvas.getContext(\"2d\");\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n        new Proton.Span(0.8, 1.3)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 50));\n      emitter.addInitialize(new Proton.Life(5, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(5, 8),\n          new Proton.Span(30, 70),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(\n        new Proton.Color([\n          \"#36aaf3\",\n          \"#fd769c\",\n          \"#94ff22\",\n          \"#ffa545\",\n          \"#ffffff\"\n        ])\n      );\n      emitter.addBehaviour(new Proton.Scale(0.7, 1));\n      emitter.addBehaviour(new Proton.Gravity(3));\n      emitter.addBehaviour(new Proton.Collision(emitter));\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n      emitter.p.y = canvas.height / 2 + 50;\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle =\n          getColor(this.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      this.proton.addRenderer(renderer);\n\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    customDeadBehaviour(canvas) {\n      return {\n        initialize(particle) {},\n        applyBehaviour: particle => {\n          if (particle.p.y + particle.radius >= canvas.height) {\n            if (particle.radius > 9) {\n              this.miniEmitteing(particle);\n              particle.dead = true;\n            }\n          }\n        }\n      };\n    },\n\n    createMiniEmitter(canvas) {\n      const miniEmitter = new Proton.Emitter();\n      miniEmitter.rate = new Proton.Rate(\n        new Proton.Span(3, 6),\n        new Proton.Span(1, 2)\n      );\n\n      miniEmitter.addInitialize(new Proton.Mass(1));\n      miniEmitter.radiusInitialize = new Proton.Radius();\n      miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n      miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n      miniEmitter.addInitialize(\n        new Proton.V(\n          new Proton.Span(1.5, 3),\n          new Proton.Span(0, 70, true),\n          \"polar\"\n        )\n      );\n\n      miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n      miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n      miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n      miniEmitter.addBehaviour(new Proton.Gravity(4));\n      miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n      miniEmitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          \"bound\"\n        )\n      );\n      this.proton.addEmitter(miniEmitter);\n\n      this.miniEmitter = miniEmitter;\n    },\n    miniEmitteing(particle) {\n      const miniEmitter = this.miniEmitter;\n      miniEmitter.radiusInitialize.reset(\n        particle.radius * 0.05,\n        particle.radius * 0.2\n      );\n      miniEmitter.colorBehaviour.reset(particle.color);\n      miniEmitter.p.x = particle.p.x;\n      miniEmitter.p.y = particle.p.y;\n      miniEmitter.emit(\"once\");\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestory() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles"}]}