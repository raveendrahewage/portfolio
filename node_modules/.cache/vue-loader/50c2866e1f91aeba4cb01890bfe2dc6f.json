{"remainingRequest":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\CanvasComp.vue?vue&type=style&index=0&id=5c056944&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\CanvasComp.vue","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Raveendra\\Desktop\\Academic\\PORTFOLIO\\New folder\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n",{"version":3,"sources":["CanvasComp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA","file":"CanvasComp.vue","sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles","sourcesContent":["<template>\n  <canvas\n    class=\"canvas\"\n    ref=\"canvasRef\"\n    v-bind:style=\"styleObject\"\n    v-on:mousedown=\"handleMouseDown\"\n    v-on:mousemove=\"handleMouseMove\"\n  />\n</template>\n\n<script>\nexport default {\n  name: \"CanvasComp\",\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    globalCompositeOperation: String\n  },\n  data: function() {\n    return {\n      styleObject: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    };\n  },\n  methods: {\n    initCanvas: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n\n      if (this.globalCompositeOperation) {\n        const context = canvas.getContext(\"2d\");\n        context.globalCompositeOperation = this.globalCompositeOperation;\n      }\n\n      this.$emit(\"canvasInited\", canvas);\n    },\n    resize: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n      this.$emit(\"canvasResize\", { width, height });\n    },\n\n    handleMouseDown: function(e) {\n      this.$emit(\"canvasMouseDown\", e);\n    },\n\n    handleMouseMove: function(e) {\n      this.$emit(\"canvasMouseMove\", e);\n    }\n  },\n  created() {\n    if (this.bg) {\n      this.styleObject = Object.assign(this.styleObject, {\n        position: \"absolute\",\n        zIndex: -1,\n        top: 0,\n        left: 0\n      });\n    }\n\n    if(this.canvas){\n      this.styleObject = Object.assign(this.styleObject, this.canvas);\n    }\n  },\n  mounted() {\n    this.initCanvas();\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n  },\n  beforeDestory() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n</style>\n"]}]}